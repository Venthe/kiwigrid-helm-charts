image:
  repository: fluent/fluentd-kubernetes-daemonset
  # if empty uses appVersion from Chart.yaml as default image tag
  tag: ""
  ## Specify an imagePullPolicy (Required)
  ## It's recommended to change this to 'Always' if the image tag is 'latest'
  ## ref: http://kubernetes.io/docs/user-guide/images/#updating-images
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistrKeySecretName

# Specify where fluentd can find logs
hostLogDir:
  varLog: /var/log
  # Use:
  #  docker: /var/lib/docker/containers
  #  containerd: /var/log/containers
  containers: /var/log/containers
  libSystemdDir: /usr/lib64

configMaps:
  useDefaults:
    kubernetes:
      default: true
      clusterAutoscaler: true
      containers: true
      docker: true
      etcd: true
      glbc: true
      kubeApiserverAudit: true
      kubeApiserver: true
      kubeControllerManager: true
      kubeProxy: true
      kubeScheduler: true
      kubelet: true
      rescheduler: true
      salt: true
      startupscript: true
    disable: true
    fluent: true
    prometheus: true
    systemd: true
    tail_container_parse: true
    systemConf: true
    messageTransformer:
      enabled: false
      annotationMatch: '[ "^fluentd.*" ]'
    # kubernetesMetadataFilterConfig lets you set arbitrary
    # configuration key-value pairs for the kubernetes_metadata
    # filter. See
    # https://github.com/fabric8io/fluent-plugin-kubernetes_metadata_filter#configuration
    kubernetesMetadataFilterConfig: {}

    ################################# Set containersKeepTimeKey to true to keep the kubernetes container log timestamp as part of the log message
    ################################# Read keep_time_key at https://docs.fluentd.org/configuration/parse-section
    ###############################containersKeepTimeKey: false
    ###############################

# can be used to add new config or overwrite the default configmaps completely after the configmaps default has been disabled above
extraConfigMaps: {}
  # system.conf: |-
  #   <system>
  #     root_dir /tmp/fluentd-buffers/
  #   </system>

# -- Array of extra K8s manifests to deploy
extraObjects: []
  # - apiVersion: secrets-store.csi.x-k8s.io/v1
  #   kind: SecretProviderClass
  #   metadata:
  #     name: my-secrets-store
  #   spec:
  #     provider: aws
  #     parameters:
  #       objects: |
  #         - objectName: "openid-secret"
  #           objectType: "secretsmanager"
  #           jmesPath:
  #               - path: "client_id"
  #                 objectAlias: "client_id"
  #               - path: "client_secret"
  #                 objectAlias: "client_secret"
  #     secretObjects:
  #     - data:
  #       - key: client_id
  #         objectName: client_id
  #       - key: client_secret
  #         objectName: client_secret
  #       secretName: openid-secrets-store
  #       type: Opaque

service: {}
  # ports:
  #   - name: "monitor-agent"
  #     type: ClusterIP
  #     port: 24231

## Extra labels to be added to created resources
labels: {}

annotations: {}

serviceMonitor:
  ## If true, a ServiceMonitor CRD is created for a prometheus operator
  ## https://github.com/coreos/prometheus-operator
  ##
  enabled: false
  interval: 10s
  path: /metrics
  port: 24231
  labels: {}
  metricRelabelings: []
  relabelings: []
  type: ClusterIP

rbac:
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  annotations: {}

## Specify if a Pod Security Policy for node-exporter must be created
## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
##
podSecurityPolicy:
  enabled: false
  annotations: {}
    ## Specify pod annotations
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#seccomp
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#sysctl
    ##
    # seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
    # seccomp.security.alpha.kubernetes.io/defaultProfileName: 'docker/default'
    # apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'

prometheusRule:
  ## If true, a PrometheusRule CRD is created for a prometheus operator
  ## https://github.com/coreos/prometheus-operator
  ##
  enabled: false
  prometheusNamespace: monitoring
  labels: {}
  rules:
  - alert: FluentdNodeDown
    expr: up{job="{{ include "fluentd-opensearch.metricsServiceName" . }}"} == 0
    for: 10m
    labels:
      service: fluentd
      severity: warning
    annotations:
      summary: fluentd cannot be scraped
      description: Prometheus could not scrape {{ "{{ $labels.job }}" }} for more than 10 minutes
  - alert: FluentdNodeDown
    expr: up{job="{{ include "fluentd-opensearch.metricsServiceName" . }}"} == 0
    for: 30m
    labels:
      service: fluentd
      severity: critical
    annotations:
      summary: fluentd cannot be scraped
      description: Prometheus could not scrape {{ "{{ $labels.job }}" }} for more than 30 minutes
  - alert: FluentdQueueLength
    expr: rate(fluentd_status_buffer_queue_length[5m]) > 0.3
    for: 1m
    labels:
      service: fluentd
      severity: warning
    annotations:
      summary: fluentd node are failing
      description: In the last 5 minutes, fluentd queues increased 30%. Current value is {{ "{{ $value }}" }}
  - alert: FluentdQueueLength
    expr: rate(fluentd_status_buffer_queue_length[5m]) > 0.5
    for: 1m
    labels:
      service: fluentd
      severity: critical
    annotations:
      summary: fluentd node are critical
      description: In the last 5 minutes, fluentd queues increased 50%. Current value is {{ "{{ $value }}" }}
  - alert: FluentdRecordsCountsHigh
    expr: >
      sum(rate(fluentd_output_status_emit_records{job="{{ include "fluentd-opensearch.metricsServiceName" . }}"}[5m]))
      BY (instance) >  (3 * sum(rate(fluentd_output_status_emit_records{job="{{ include "fluentd-opensearch.metricsServiceName" . }}"}[15m]))
      BY (instance))
    for: 1m
    labels:
      service: fluentd
      severity: critical
    annotations:
      summary: fluentd records count are critical
      description: In the last 5m, records counts increased 3 times, comparing to the latest 15 min.
  - alert: FluentdRetry
    expr: increase(fluentd_status_retry_count[10m]) > 0
    for: 20m
    labels:
      service: fluentd
      severity: warning
    annotations:
      description: Fluentd retry count has been  {{ "{{ $value }}" }} for the last 10 minutes
      summary: Fluentd retry count has been  {{ "{{ $value }}" }} for the last 10 minutes
  - alert: FluentdOutputError
    expr: increase(fluentd_output_status_num_errors[10m]) > 0
    for: 1s
    labels:
      service: fluentd
      severity: warning
    annotations:
      description: Fluentd output error count is {{ "{{ $value }}" }} for the last 10 minutes
      summary: There have been Fluentd output error(s) for the last 10 minutes

serviceMetric:
  ## If true, the metrics service will be created
  ## Alternative to implicit creation through serviceMonitor.enabled
  ##
  enabled: false

fullnameOverride: ~
nameOverride: ~

# Specify to use specific priorityClass for pods
# ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
# If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority
# Pods to make scheduling of the pending Pod possible.
priorityClassName: ""

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 500Mi
  # requests:
  #   cpu: 100m
  #   memory: 200Mi

fluentd:
  # If you want to change args of fluentd process
  # by example you can add -vv to launch with trace log
  # FLUENTD_OPT
  opt: '--no-supervisor -q'
  # Specifies the output format of fluentd's own log messages. Set to
  # "json" to enable structured logging.
  # See https://docs.fluentd.org/deployment/logging#log-format
  logFormat: text
  containers:
    excludePath: use_default
    parserTimeFormat: '%Y-%m-%dT%H:%M:%S.%NZ'
    path: /var/log/containers/*.log
    tag: kubernetes.*
  kubernetes:
    caFile: ~
    host: ~
    metadata:
      skipContainerMetadata: 'false'
      skipLabels: 'false'
      skipMasterUrl: 'false'
      skipNamespaceMetadata: 'false'
    port: ~
    url: ~
    verifySSL: 'true'
    watch: 'true'
  opensearch:
    auth:
      enabled: 'false'
      existingSecret:
        key: ~
        name: ~
      password: ~
      user: ~
    buffer:
      chunkKeys: 'tag, time'
      timeKey: 1m
      chunkLimitSize: 8M
      enabled: true
      flushInterval: 60s
      flushMode: interval
      flushThreadCount: '1'
      overflowAction: block
      path: /var/log/fluentd-buffers/kubernetes.system.buffer
      retryForever: 'false'
      retryMaxInterval: '30'
      retryTimeout: 72h
      retryType: exponential_backoff
      totalLimitSize: 512M
      type: file
    caFile: ~
    client:
      cert: ~
      key: ~
      pass: ~
    host: ~
    hosts: []
    # FLUENT_OPENSEARCH_INDEX_NAME: 'fluentd'
    indexName: fluentd.%Y%m%d
    # If you are configuring an AWS signing sidecar, scheme should be "http"
    log400Reason: false
    logLevel: info
    logstash:
      dateformat: '%Y.%m.%d'
      enabled: true
      format: 'false'
      includeTimestamp: 'false'
      prefix: logstash
      prefixSeparator: '-'
    path: ~
    port: ~
    reconnectOnError: true
    reloadConnections: false
    reloadOnFailure: false
    requestTimeout: 5s
    scheme: http
    sslVerify: 'true'
    sslVersion: TLSv1_2
    suppressTypeName: false
    tagKey:
      include: 'false'
      key: _key
    template:
      content: |-
        {
          "index_patterns": [
              "logstash-*"
          ],
          "settings": {
              "index": {
                  "number_of_replicas": "1"
              }
          }
        }
      enabled: false
      file: fluentd-template.json
      name: fluentd-template
      overwrite: false
      useLegacy: false
    timeKey:
      format: ~
      include: 'false'
      key: time
      localtime: 'true'
      timezone: ~
  prometheus:
    bind: 0.0.0.0
    path: /metrics
    port: '24231'

# If you want to add custom environment variables, use the env dict
# You can then reference these in your config file e.g.:
#     user "#{ENV['OUTPUT_USER']}"
env: {}
  # OUTPUT_USER: my_user
  # LIVENESS_THRESHOLD_SECONDS: 300
  # STUCK_THRESHOLD_SECONDS: 900
  # BUFFER_PATH: /var/log/fluentd-buffers/kubernetes.system.buffer

# If you want to add custom environment variables from secrets, use the secret list
secret: []
# - name: opensearch_PASSWORD
#   secret_name: opensearch
#   secret_key: password

livenessProbe:
  enabled: true
  initialDelaySeconds: 600
  periodSeconds: 60
  kind:
    exec:
      command:
      # Liveness probe is aimed to help in situations where fluentd
      # silently hangs for no apparent reasons until manual restart.
      # The idea of this probe is that if fluentd is not queueing or
      # flushing chunks for 5 minutes, something is not right. If
      # you want to change the fluentd configuration, reducing amount of
      # logs fluentd collects, consider changing the threshold or turning
      # liveness probe off completely.
      - '/bin/sh'
      - '-c'
      - |
        LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300};
        STUCK_THRESHOLD_SECONDS=${STUCK_THRESHOLD_SECONDS:-900};
        BUFFER_PATH=${BUFFER_PATH:-/var/log/fluentd-buffers/kubernetes.system.buffer}
        if [ ! -e ${BUFFER_PATH} ];
        then
          echo "Expected file ${BUFFER_PATH} does not exist. This is likely a configuration issue.";
          exit 1;
        fi;
        touch -d "${STUCK_THRESHOLD_SECONDS} seconds ago" /tmp/marker-stuck;
        if [ -n "$(find ${BUFFER_PATH} -mindepth 1 -type d ! -newer /tmp/marker-stuck -print -quit)" ];
        then
          echo "opensearch buffer found stuck longer than $STUCK_THRESHOLD_SECONDS seconds. Clearing buffer."
          rm -rf ${BUFFER_PATH};
          exit 1;
        fi;
        touch -d "${LIVENESS_THRESHOLD_SECONDS} seconds ago" /tmp/marker-liveness;
        if [ -n "$(find ${BUFFER_PATH} -mindepth 1 -type d ! -newer /tmp/marker-liveness -print -quit)" ];
        then
          echo "opensearch buffer found stuck longer than $LIVENESS_THRESHOLD_SECONDS seconds."
          exit 1;
        fi;

podAnnotations: {}
  # prometheus.io/scrape: "true"
  # prometheus.io/port: "24231"

securityContext: {}
  # seLinuxOptions:
  #   type: spc_t

## DaemonSet update strategy
## Ref: https://kubernetes.io/docs/tasks/manage-daemon/update-daemon-set/
updateStrategy:
  type: RollingUpdate

tolerations: []
  # - key: node-role.kubernetes.io/master
  #   operator: Exists
  #   effect: NoSchedule

affinity: {}
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: node-role.kubernetes.io/master
  #         operator: DoesNotExist

nodeSelector: {}

extraVolumes: []
# - name: es-certs
#   secret:
#     defaultMode: 420
#     secretName: es-certs

extraVolumeMounts: []
# - name: es-certs
#   mountPath: /certs
#   readOnly: true

## Sidecar containers
##
## If using AWS opensearch, all requests to ES need to be signed regardless
## of whether one is using Cognito or not. The example here shows how to
## configure a sidecar proxy that takes care of signing all requests being sent
## to the AWS ES Domain.
extraContainers: []
# - name: aws-es-proxy
#   image: abutaha/aws-es-proxy:v1.0
#   imagePullPolicy: IfNotPresent
#   args:
#   - "-endpoint"
#   # Put your opensearch host here as the endpoint and set...
#   # opensearch.hosts location to the sidecar address, e.g. localhost:8080
#   # opensearch.scheme to http
#   - "http://opensearch-client:9200"
#   - "-listen"
#   - "localhost:8080"
#   - "-timeout"
#   - "15"
#   # You can configure some features of AWS ES Proxy by passing specific
#   # environment variables. E.g. AWS EKS IRSA is supported by providing
#   # AWS_ROLE_ARN and AWS_WEB_IDENTITY_TOKEN_FILE
#   env:
#   - name: PORT_NUM
#     value: "8080"
#   resources:
#     limits:
#       cpu: 100m
#       memory: 500Mi
#     requests:
#       cpu: 100m
#       memory: 200Mi

extraInitContainers: []
# - name: do-something
#   image: busybox
#   command: ['do', 'something']
